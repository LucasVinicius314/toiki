version: "3.7"

services:

  toiki_bot:
    container_name: toiki_bot
    image: ghcr.io/toiki-org/toiki-bot:latest
    restart: unless-stopped
    env_file: bot/.env
    networks:
      - toiki_net

  toiki_backend:
    container_name: toiki_backend
    image: ghcr.io/toiki-org/toiki-backend:latest
    restart: unless-stopped
    env_file: server/.env
    networks:
      - toiki_net
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  toiki_certbot:
    container_name: toiki_certbot
    image: ghcr.io/toiki-org/toiki-certbot:latest
    restart: unless-stopped
    networks:
      - toiki_net
    volumes:
      - ./nginx/etc/letsencrypt:/etc/letsencrypt
      - ./nginx/etc/nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/var/www/_letsencrypt:/var/www/_letsencrypt
      - ./nginx/var/www/certbot:/var/www/certbot
    entrypoint: [ "/docker-entrypoint.d/certbot-entrypoint.sh" ]

  toiki_nginx:
    container_name: toiki_nginx
    image: ghcr.io/toiki-org/toiki-nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - toiki_backend
      - toiki_certbot
    networks:
      - toiki_net
    volumes:
      - ./nginx/etc/letsencrypt:/etc/letsencrypt
      - ./nginx/etc/nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/var/www/_letsencrypt:/var/www/_letsencrypt
      - ./nginx/var/www/certbot:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

networks:
  toiki_net:
    driver: bridge
